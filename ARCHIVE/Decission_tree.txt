
import pandas as pd
from sklearn import tree
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv('data_con_2018.csv')


#df=df[df['Amount']!=0]
df.drop(df[df['Amount'] == 0].index, inplace = True)
df.drop(df[df['Throughput Time'] == 0].index, inplace = True)

#data=df.iloc[:,list(range(1,len(df.columns)-1))]
#target=df.iloc[:,-1]
#print(df.columns)

data=df.iloc[:,list(range(1,len(df.columns)-1))]
target=df.iloc[:,-1]
#print(target)
#print(data)
X=data.to_numpy()
y=target.to_numpy()

# =============================================================================
# REGRESSION DECISION TREE
# =============================================================================

#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

#clf = tree.DecisionTreeClassifier()
clf = tree.DecisionTreeRegressor()

#clf = clf.fit(X_train, y_train)
clf = clf.fit(X, y)

#INPUTING THE VALUES IN MODEL 
y_pred = clf.predict(X)

print("REGRESSION DECISION TREE :")
# The mean squared error
print('Mean squared error: %.2f',mean_squared_error(y, y_pred))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f',r2_score(y,y_pred))

# =============================================================================
# LINERAR REGRESSION
# =============================================================================

regr = linear_model.LinearRegression()
regr.fit(X, y)
y_pred = regr.predict(X)

#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

print("LINEAR REGRESSION :")
# The coefficients
#print('Coefficients: \n', regr.coef_)
# The mean squared error
print('Mean squared error: %.2f',mean_squared_error(y, y_pred))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f',r2_score(y,y_pred))